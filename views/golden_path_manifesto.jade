extends layout

block content
	div.wrapper.golden-path
		

		div.section

			h1.heading The golden path

			p.lead A community upvoting platform that lets us collaborate on best practise in front end code. 

		div.section
			h2.heading Background

			p 
				|For those of you that don't know me, my name is Mairead. I'm a front end developer and I've been doing this for around 15 years. This is my response to the discussions I heard at 

				| <a href='http://edgeconf.com/2014-london')> Edgeconf 2014</a>

				| in London on March 21st.

			p 
				|The first panel centred around 
				|<a href="http://www.w3.org/TR/components-intro/">Web components</a>,
				| introduced by 
				|<a href="http://petergasston.co.uk/">Peter Gasston</a>.
				| Like Peter I feel these are essential for the progress of our industry. A later panel member mentioned we are still treading well worn paths. Freeing ourselves from the repetition of the mundane is essential if we are to innovate. 

			p I realise I am preaching to the choir here.

			p 
				|Peter also raised another important point. As a community, how do we address the proliferation of components? Anyone who has ever searched for a 
				| <a href="https://www.google.co.uk/#q=jQuery+carousel&safe=off">jQuery carousel</a> 
				|knows what I'm talking about here. 

			p The problem, as I see it, is we have no mechanism for quality control and no platform for promoting the best we have to offer. This is a perennial problem with our development stack. 

			p 
			|It was interesting to hear this issue echoed in the build tools panel. 
			|<a href="http://jaysoo.ca/2014/01/27/gruntjs-vs-gulpjs/">Which build tool do you use?</a>
			| Once you've chosen, which 
			|<a href="http://gruntjs.com/plugins">plugins</a> 
			|will you implement into your workflow? At the moment we have no choice but to suck it and see and this can be a costly exercise. 
			|<sub>(Only 2556 Grunt plugins to choose from, yay!)</sub>

			p 
			|There will always be situations where a total custom build is your best bet but for the other times when 'off the shelf' will do 
			|<em>a community upvoting platform that lets us collaborate on best practise in front end code</em>
			| is my suggested approach.
	
		div.section.problem-section
			h2.heading.problem-diagram The problem

			ul.problem-diagram
				li.problem.problem-1
					span.number 1
					span.text
						a(href='#collaboration') Lack of collaboration

				li.problem.problem-2
					span.number 2
					span.text
						a(href='#complexity') Increasing complexity

				li.problem.problem-3
					span.number 3
					span.text
						a(href='#effort') Wasted effort

				li.problem.problem-4
					span.number 4
					span.text
						a(href='#proliferation') Proliferation of code

				li.problem.problem-5
					span.number 5
					span.text
						a(href='#quality') No quality control

				li.problem.problem-6
					span.number 6
					span.text
						a(href='#fragmentation') Fragmentation

				li.problem.problem-7
					span.number 7
					span.text
						a(href='#reinvention') Re-inventing the wheel

				li.problem.problem-8
					span.number 8
					span.text
						a(href='#reuse') Lack of Re-use

		div.section
			h2.heading What it is 

			ul
				li
					p Crowd sourcing opinion and peer review of code.
				li
					p Supporting discussion and collaboration around best practise.
				li
					p Helping people learn from best practise.
				

		div.section
			h2.heading What it's not

			ul 
				li 
					p A way forcing everyone to write the same code. This would make me sad. No one wants to stifle creativity.

				li
					p 
					|Preventing proliferation of code or repetition. We can't stop people publishing their own code. Why would we want to? 
					|<sub>(See point one)</sub>

				li
					p 
					|A code repository. We already have 
					|<a href="https://github.com/">one</a> 
					|of 
					|<a href="https://bitbucket.org/">those</a>.

				li
					p 
					|A support platform. We already have
					|<a href="http://stackoverflow.com/">one</a> 
					|of those.

				li 
					p 
					|A standards body. We already have
					|<a href="http://www.w3.org/WAI/intro/wcag">one</a> 
					|of 
					|<a href="http://www.w3.org/">those</a>.

				li
					p
					|A package manager. We already have
					|<a href="http://bower.io/">one</a> 
					|of 
					|<a href="https://www.npmjs.org/">those</a>.
				
				li 
					p A popularity contest. Its natural that some projects are going to have a higher profile in the industry than others. It would be good to learn from the industry as a whole. I'm hoping this platform might be a way to share those learnings. 

		div.section
			h2.heading Next steps

			ul
				li
					p I'm just gauging interest right now to see if this would be viable. 

				li
					p A couple of people have suggested a meetup to discuss ideas and propose solutions. 

				li
					p 
					|I think it would be good to evaluate 
					|<a href="http://exercism.io/">existing</a>
					|<a href="http://codereview.stackexchange.com/">solutions</a>. 
					|Not repeating existing work is of paramount importance.

				li
					p I'd like to build a beta application and invite people to participate. 

				li 
					p 
					|You can reach me 
					|<a href="https://twitter.com/tiny_m">here</a>
					|if you'd like to get involved.

		div.section.problem-expanded
			h2.heading The problem expanded

			p For those of you still reading or curious to understand the driving focrces behind my idea. 

			h3#collaboration Lack of collaboration
			p
				|There isn't currently a great deal of opportunity for practioners to collaborate and review code. Our closest solution which supports discourse and debate is 
				|<a href="http://stackoverflow.com/">stackoverflow</a>.

			h3#complexity Increasing complexity

			p The primary concern levelled at this seems to be that it is raising the barrier of entry for learners. In more practical terms for a development team it makes it harder to leave behind a coherent and maintainable development stack for practioners of all levels and makes hiring more difficult.

			h3#effort Wasted effort
			
			p 
				|I am tired of rebuilding the same UI componenents repeatedly every time the front end stack moves on. I feel I can keep my skills current but code re-use is essentially a myth to me akin to a 
				|<a href="http://magistatic.com/i/art/magi-hippogryph-gold-sm.jpg">golden feathered Hypogriff</a>.
				| I feel this is holding us back. 

			h3#proliferation Proliferation of code
				
			p Its natural that everyone wants to make their own code. After all you learn best by doing and that's a good thing, which we should encourage. However we are swimming in a soup of front end plugins, UI components, frameworks and libraries and there is no clear delineation between the good and the bad.

			h3#quality No quality control

			p At the moment a developer's only clear pointers towards code quality are: reading source, community adoption, recent commit activity and corporate branding. Whilst these are all useful, they each have their limitations and don't necessarily give you full confidence when choosing a solution. 

			h3#fragmentation Fragmentation

			p As our industry matures our development practises are solidifying into more complex stacks. I welcome this and I think it's necessary progression but it can be hard to keep a weather eye on every development as they become increasingly diverse.

			h3#reinvention Re-inventing the wheel

			p This touches on points 3 and 4. I'm tired of writing the same code, particularly when I know 50 libraries already exist that are basically the same but slightly different in the one crucial way that means I have to write my own, from scratch, again. I think we are making classic mistakes of software development. We are not writing code that is modular, encapsulated and extensible. We need to get better at this without question. 

			h3#reuse Lack of Re-use

			p 
				|Its got to the point where even code I wrote 6 months ago is obsolete. I don't think I am alone in struggling to keep my front end stack current, re-usable and maintainable. I rarely manage to bring code forward into the next project. We have great tools to support this like 
				|<a href="http://yeoman.io/">Yeoman </a>
				|and 
				|<a href="http://bower.io/">Bower</a>
				|but I think we can do more to keep things 
				|<a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself">DRY</a>, 
				| particlularly looking forward into the new era of web components.

		#disqus_thread

script.

	/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
	var disqus_shortname = 'emdeebeebee'; // required: replace example with your forum shortname

	/* * * DON'T EDIT BELOW THIS LINE * * */
	(function() {
	var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
	dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
	(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
	})();
script(src="/javascripts/disqus.js")